{"ast":null,"code":"import { API_URL } from \"src/environment/environment\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProductAjaxService {\n  constructor(http) {\n    this.http = http;\n    this.url = API_URL + '/product';\n  }\n  getProductById(id) {\n    return this.http.get(this.url + '/' + id);\n  }\n  getPageProducts(page, size, sort, direction) {\n    return this.http.get(this.url + '?page=' + page + '&size=' + size + '&sort=' + sort + ',' + direction);\n  }\n  getProductRandom() {\n    return this.http.get(this.url + '/random');\n  }\n  getProductsByCategory(category_id, page, size, sort, direction) {\n    return this.http.get(this.url + '/category/' + category_id + '?page=' + page + '&size=' + size + '&sort=' + sort + ',' + direction);\n  }\n  getProductsBySize(size, page, size2, sort, direction) {\n    return this.http.get(this.url + '/size/' + size + '?page=' + page + '&size=' + size2 + '&sort=' + sort + ',' + direction);\n  }\n  getProductsMostSold(page, size) {\n    return this.http.get(this.url + '/mostSold?page=' + page + '&size=' + size);\n  }\n  searchProducts(searchText, page, size, sort, direction) {\n    return this.http.get(this.url + '/search/' + searchText + '?page=' + page + '&size=' + size + '&sort=' + sort + ',' + direction);\n  }\n  // Get product by stock\n  getProductsByStock(stock, page, size, sort, direction) {\n    return this.http.get(this.url + '/stock/' + stock + '?page=' + page + '&size=' + size + '&sort=' + sort + ',' + direction);\n  }\n  // Get products by price and category descending\n  getProductsByPriceAndCategoryDesc(category_id, price, page, size, sort, direction) {\n    return this.http.get(this.url + '/category/' + category_id + '/price/' + price + '/desc?page=' + page + '&size=' + size + '&sort=' + sort + ',' + direction);\n  }\n  getProductPrice(id) {\n    return this.http.get(this.url + '/price/' + id);\n  }\n  createProduct(product) {\n    return this.http.post(this.url, product);\n  }\n  generateProducts(amount) {\n    return this.http.post(this.url + '/populate/' + amount, {});\n  }\n  updateProduct(product) {\n    return this.http.put(this.url, product);\n  }\n  deleteProduct(id) {\n    return this.http.delete(this.url + '/' + id);\n  }\n  deleteAllProducts() {\n    return this.http.delete(this.url + '/empty');\n  }\n  static #_ = this.ɵfac = function ProductAjaxService_Factory(t) {\n    return new (t || ProductAjaxService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProductAjaxService,\n    factory: ProductAjaxService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["API_URL","ProductAjaxService","constructor","http","url","getProductById","id","get","getPageProducts","page","size","sort","direction","getProductRandom","getProductsByCategory","category_id","getProductsBySize","size2","getProductsMostSold","searchProducts","searchText","getProductsByStock","stock","getProductsByPriceAndCategoryDesc","price","getProductPrice","createProduct","product","post","generateProducts","amount","updateProduct","put","deleteProduct","delete","deleteAllProducts","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Lucas\\Desktop\\urbanize-frontend\\src\\app\\service\\product.ajax.service.ts"],"sourcesContent":["import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { API_URL } from \"src/environment/environment\";\nimport { IProduct, IProductPage } from \"../model/model.interfaces\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductAjaxService {\n\n  private url = API_URL + '/product';\n\n  constructor(private http: HttpClient) {\n  }\n\n  getProductById(id: number): Observable<IProduct> {\n    return this.http.get<IProduct>(this.url + '/' + id);\n  }\n\n  getPageProducts(page: number, size: number, sort: string, direction: string): Observable<IProductPage> {\n    return this.http.get<IProductPage>(this.url + '?page=' + page + '&size=' + size + '&sort=' + sort + ',' + direction);\n  }\n\n  getProductRandom(): Observable<IProduct> {\n    return this.http.get<IProduct>(this.url + '/random');\n  }\n\n  getProductsByCategory(category_id: number, page: number, size: number, sort: string, direction: string): Observable<IProductPage> {\n    return this.http.get<IProductPage>(this.url + '/category/' + category_id + '?page=' + page + '&size=' + size + '&sort=' + sort + ',' + direction);\n  }\n\n  getProductsBySize(size: number, page: number, size2: number, sort: string, direction: string): Observable<IProductPage> {\n    return this.http.get<IProductPage>(this.url + '/size/' + size + '?page=' + page + '&size=' + size2 + '&sort=' + sort + ',' + direction);\n  }\n\n  getProductsMostSold(page: number, size: number): Observable<IProductPage> {\n    return this.http.get<IProductPage>(this.url + '/mostSold?page=' + page + '&size=' + size);\n  }\n\n  searchProducts(searchText: string, page: number, size: number, sort: string, direction: string): Observable<IProductPage> {\n    return this.http.get<IProductPage>(this.url + '/search/' + searchText + '?page=' + page + '&size=' + size + '&sort=' + sort + ',' + direction);\n  }\n\n  // Get product by stock\n  getProductsByStock(stock: number, page: number, size: number, sort: string, direction: string): Observable<IProductPage> {\n    return this.http.get<IProductPage>(this.url + '/stock/' + stock + '?page=' + page + '&size=' + size + '&sort=' + sort + ',' + direction);\n  }\n\n  // Get products by price and category descending\n  getProductsByPriceAndCategoryDesc(category_id: number, price: number, page: number, size: number, sort: string, direction: string): Observable<IProductPage> {\n    return this.http.get<IProductPage>(this.url + '/category/' + category_id + '/price/' + price + '/desc?page=' + page + '&size=' + size + '&sort=' + sort + ',' + direction);\n  }\n\n\n  getProductPrice(id: number): Observable<number> {\n    return this.http.get<number>(this.url + '/price/' + id);\n  }\n\n  createProduct(product: IProduct): Observable<IProduct> {\n    return this.http.post<IProduct>(this.url, product);\n  }\n\n  generateProducts(amount: number): Observable<number> {\n    return this.http.post<number>(this.url + '/populate/' + amount, {});\n  }\n\n  updateProduct(product: IProduct): Observable<IProduct> {\n    return this.http.put<IProduct>(this.url, product);\n  }\n\n  deleteProduct(id: number | undefined): Observable<number> {\n    return this.http.delete<number>(this.url + '/' + id);\n  }\n\n  deleteAllProducts(): Observable<number> {\n    return this.http.delete<number>(this.url + '/empty');\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}