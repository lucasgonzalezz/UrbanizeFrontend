{"ast":null,"code":"import { API_URL } from \"src/environment/environment\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CartAjaxService {\n  constructor(http) {\n    this.http = http;\n    this.url = API_URL + '/cart';\n  }\n  getCartById(id) {\n    return this.http.get(this.url + '/' + id);\n  }\n  getCartByUserId(user_id) {\n    return this.http.get(this.url + '/user/' + user_id);\n  }\n  getCartByUserAndProduct(user_id, product_id) {\n    return this.http.get(this.url + '/user/' + user_id + '/product/' + product_id);\n  }\n  getPageCarts(page, size, sort, direction) {\n    return this.http.get(this.url + '?page=' + page + '&size=' + size + '&sort=' + sort + ',' + direction);\n  }\n  getCartCost(id) {\n    return this.http.get(this.url + '/cost/' + id);\n  }\n  getTotalCartCost(user_id) {\n    return this.http.get(this.url + '/totalCost/' + user_id);\n  }\n  createCart(cart) {\n    return this.http.post(this.url, cart);\n  }\n  generateCarts(amount) {\n    return this.http.post(this.url + '/populate/' + amount, {});\n  }\n  updateCart(cart) {\n    return this.http.put(this.url, cart);\n  }\n  deleteCart(id) {\n    return this.http.delete(this.url + '/' + id);\n  }\n  deleteCartByUsuario(user_id) {\n    return this.http.delete(this.url + '/user/' + user_id);\n  }\n  deleteAllCarts() {\n    return this.http.delete(this.url + '/empty');\n  }\n  static #_ = this.ɵfac = function CartAjaxService_Factory(t) {\n    return new (t || CartAjaxService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CartAjaxService,\n    factory: CartAjaxService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["API_URL","CartAjaxService","constructor","http","url","getCartById","id","get","getCartByUserId","user_id","getCartByUserAndProduct","product_id","getPageCarts","page","size","sort","direction","getCartCost","getTotalCartCost","createCart","cart","post","generateCarts","amount","updateCart","put","deleteCart","delete","deleteCartByUsuario","deleteAllCarts","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Lucas\\Desktop\\urbanize-frontend\\src\\app\\service\\cart.ajax.service.ts"],"sourcesContent":["import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { API_URL } from \"src/environment/environment\";\nimport { ICart, ICartPage } from \"../model/model.interfaces\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartAjaxService {\n\n  private url = API_URL + '/cart';\n\n  constructor(private http: HttpClient) {\n  }\n\n  getCartById(id: number): Observable<ICart> {\n    return this.http.get<ICart>(this.url + '/' + id);\n  }\n\n  getCartByUserId(user_id: number): Observable<ICart> {\n    return this.http.get<ICart>(this.url + '/user/' + user_id);\n  }\n\n  getCartByUserAndProduct(user_id: number, product_id: number): Observable<ICart> {\n    return this.http.get<ICart>(this.url + '/user/' + user_id + '/product/' + product_id);\n  }\n\n  getPageCarts(page: number, size: number, sort: string, direction: string): Observable<ICartPage> {\n    return this.http.get<ICartPage>(this.url + '?page=' + page + '&size=' + size + '&sort=' + sort + ',' + direction);\n  }\n\n  getCartCost(id: number): Observable<number> {\n    return this.http.get<number>(this.url + '/cost/' + id);\n  }\n\n  getTotalCartCost(user_id: number): Observable<number> {\n    return this.http.get<number>(this.url + '/totalCost/' + user_id);\n  }\n\n  createCart(cart: ICart): Observable<ICart> {\n    return this.http.post<ICart>(this.url, cart);\n  }\n\n  generateCarts(amount: number): Observable<number> {\n    return this.http.post<number>(this.url + '/populate/' + amount, {});\n  }\n\n  updateCart(cart: ICart): Observable<ICart> {\n    return this.http.put<ICart>(this.url, cart);\n  }\n\n  deleteCart(id: number | undefined): Observable<number> {\n    return this.http.delete<number>(this.url + '/' + id);\n  }\n\n  deleteCartByUsuario(user_id: number): Observable<number> {\n    return this.http.delete<number>(this.url + '/user/' + user_id);\n  }\n\n  deleteAllCarts(): Observable<number> {\n    return this.http.delete<number>(this.url + '/empty');\n  }\n\n}"],"mappings":"AAGA,SAASA,OAAO,QAAQ,6BAA6B;;;AAMrD,OAAM,MAAOC,eAAe;EAI1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,GAAG,GAAGJ,OAAO,GAAG,OAAO;EAG/B;EAEAK,WAAWA,CAACC,EAAU;IACpB,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAQ,IAAI,CAACH,GAAG,GAAG,GAAG,GAAGE,EAAE,CAAC;EAClD;EAEAE,eAAeA,CAACC,OAAe;IAC7B,OAAO,IAAI,CAACN,IAAI,CAACI,GAAG,CAAQ,IAAI,CAACH,GAAG,GAAG,QAAQ,GAAGK,OAAO,CAAC;EAC5D;EAEAC,uBAAuBA,CAACD,OAAe,EAAEE,UAAkB;IACzD,OAAO,IAAI,CAACR,IAAI,CAACI,GAAG,CAAQ,IAAI,CAACH,GAAG,GAAG,QAAQ,GAAGK,OAAO,GAAG,WAAW,GAAGE,UAAU,CAAC;EACvF;EAEAC,YAAYA,CAACC,IAAY,EAAEC,IAAY,EAAEC,IAAY,EAAEC,SAAiB;IACtE,OAAO,IAAI,CAACb,IAAI,CAACI,GAAG,CAAY,IAAI,CAACH,GAAG,GAAG,QAAQ,GAAGS,IAAI,GAAG,QAAQ,GAAGC,IAAI,GAAG,QAAQ,GAAGC,IAAI,GAAG,GAAG,GAAGC,SAAS,CAAC;EACnH;EAEAC,WAAWA,CAACX,EAAU;IACpB,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAS,IAAI,CAACH,GAAG,GAAG,QAAQ,GAAGE,EAAE,CAAC;EACxD;EAEAY,gBAAgBA,CAACT,OAAe;IAC9B,OAAO,IAAI,CAACN,IAAI,CAACI,GAAG,CAAS,IAAI,CAACH,GAAG,GAAG,aAAa,GAAGK,OAAO,CAAC;EAClE;EAEAU,UAAUA,CAACC,IAAW;IACpB,OAAO,IAAI,CAACjB,IAAI,CAACkB,IAAI,CAAQ,IAAI,CAACjB,GAAG,EAAEgB,IAAI,CAAC;EAC9C;EAEAE,aAAaA,CAACC,MAAc;IAC1B,OAAO,IAAI,CAACpB,IAAI,CAACkB,IAAI,CAAS,IAAI,CAACjB,GAAG,GAAG,YAAY,GAAGmB,MAAM,EAAE,EAAE,CAAC;EACrE;EAEAC,UAAUA,CAACJ,IAAW;IACpB,OAAO,IAAI,CAACjB,IAAI,CAACsB,GAAG,CAAQ,IAAI,CAACrB,GAAG,EAAEgB,IAAI,CAAC;EAC7C;EAEAM,UAAUA,CAACpB,EAAsB;IAC/B,OAAO,IAAI,CAACH,IAAI,CAACwB,MAAM,CAAS,IAAI,CAACvB,GAAG,GAAG,GAAG,GAAGE,EAAE,CAAC;EACtD;EAEAsB,mBAAmBA,CAACnB,OAAe;IACjC,OAAO,IAAI,CAACN,IAAI,CAACwB,MAAM,CAAS,IAAI,CAACvB,GAAG,GAAG,QAAQ,GAAGK,OAAO,CAAC;EAChE;EAEAoB,cAAcA,CAAA;IACZ,OAAO,IAAI,CAAC1B,IAAI,CAACwB,MAAM,CAAS,IAAI,CAACvB,GAAG,GAAG,QAAQ,CAAC;EACtD;EAAC,QAAA0B,CAAA,G;qBArDU7B,eAAe,EAAA8B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAflC,eAAe;IAAAmC,OAAA,EAAfnC,eAAe,CAAAoC,IAAA;IAAAC,UAAA,EAFd;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}