{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from \"@angular/core\";\nexport let AuthInterceptor = class AuthInterceptor {\n  constructor(sesionService) {\n    this.sesionService = sesionService;\n  }\n  intercept(req, next) {\n    if (this.sesionService.isSessionActive()) {\n      const token = this.sesionService.getToken();\n      if (token) {\n        const cloned = req.clone({\n          headers: req.headers.set(\"Authorization\", \"Bearer \" + token)\n        });\n        return next.handle(cloned);\n      } else {\n        return next.handle(req);\n      }\n    } else {\n      return next.handle(req);\n    }\n  }\n};\nAuthInterceptor = __decorate([Injectable()], AuthInterceptor);","map":{"version":3,"names":["Injectable","AuthInterceptor","constructor","sesionService","intercept","req","next","isSessionActive","token","getToken","cloned","clone","headers","set","handle","__decorate"],"sources":["C:\\Users\\Lucas\\Desktop\\urbanize-frontend\\src\\app\\interceptor\\auth.interceptor.ts"],"sourcesContent":["import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { SesionAjaxService } from \"../service/session.ajax.service\";\r\nimport { Observable } from \"rxjs\";\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n    constructor(\r\n        private sesionService: SesionAjaxService,\r\n    ) {\r\n    }\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        if (this.sesionService.isSessionActive()) {\r\n            const token = this.sesionService.getToken();\r\n            if (token) {\r\n                const cloned = req.clone({\r\n                    headers: req.headers.set(\"Authorization\", \"Bearer \" + token)\r\n                });\r\n                return next.handle(cloned);\r\n            }\r\n            else {\r\n                return next.handle(req);\r\n            }\r\n        } else {\r\n            return next.handle(req);\r\n        }\r\n    }\r\n}"],"mappings":";AACA,SAASA,UAAU,QAAQ,eAAe;AAKnC,WAAMC,eAAe,GAArB,MAAMA,eAAe;EAExBC,YACYC,aAAgC;IAAhC,KAAAA,aAAa,GAAbA,aAAa;EAEzB;EAEAC,SAASA,CAACC,GAAqB,EAAEC,IAAiB;IAC9C,IAAI,IAAI,CAACH,aAAa,CAACI,eAAe,EAAE,EAAE;MACtC,MAAMC,KAAK,GAAG,IAAI,CAACL,aAAa,CAACM,QAAQ,EAAE;MAC3C,IAAID,KAAK,EAAE;QACP,MAAME,MAAM,GAAGL,GAAG,CAACM,KAAK,CAAC;UACrBC,OAAO,EAAEP,GAAG,CAACO,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE,SAAS,GAAGL,KAAK;SAC9D,CAAC;QACF,OAAOF,IAAI,CAACQ,MAAM,CAACJ,MAAM,CAAC;OAC7B,MACI;QACD,OAAOJ,IAAI,CAACQ,MAAM,CAACT,GAAG,CAAC;;KAE9B,MAAM;MACH,OAAOC,IAAI,CAACQ,MAAM,CAACT,GAAG,CAAC;;EAE/B;CACH;AAvBYJ,eAAe,GAAAc,UAAA,EAD3Bf,UAAU,EAAE,C,EACAC,eAAe,CAuB3B"},"metadata":{},"sourceType":"module","externalDependencies":[]}