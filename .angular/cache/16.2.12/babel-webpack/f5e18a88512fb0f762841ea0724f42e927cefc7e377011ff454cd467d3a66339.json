{"ast":null,"code":"import { API_URL } from \"src/environment/environment\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PurchaseAjaxService {\n  constructor(http) {\n    this.http = http;\n    this.url = API_URL + '/purchase';\n  }\n  getPurchaseById(id) {\n    return this.http.get(this.url + '/' + id);\n  }\n  getPurchaseByUsuarioId(user_id, page, size, direction, sort) {\n    return this.http.get(this.url + '/user/' + user_id + '?page=' + page + '&size=' + size + '&sort=' + sort + ',' + direction);\n  }\n  getPagePurchases(page, size, sort, direction) {\n    return this.http.get(this.url + '?page=' + page + '&size=' + size + '&sort=' + sort + ',' + direction);\n  }\n  getPurchaseRandom() {\n    return this.http.get(this.url + '/random');\n  }\n  makeSingleCartPurchase(user_id, cart_id) {\n    return this.http.post(this.url + '/makeSingleCartPurchase/' + user_id + '/' + cart_id, {});\n  }\n  makeAllCartPurchase(user_id) {\n    return this.http.post(this.url + '/makeAllCartPurchase/' + user_id, {});\n  }\n  generatePurchases(amount) {\n    return this.http.post(this.url + '/populate/' + amount, {});\n  }\n  deletePurchase(id) {\n    return this.http.delete(this.url + '/' + id);\n  }\n  deleteAllPurchases() {\n    return this.http.delete(this.url + '/empty');\n  }\n  findPurchasesByNewest(page, size, sort, direction) {\n    return this.http.get(this.url + '/findPurchasesByNewest?page=' + page + '&size=' + size + '&sort=' + sort + ',' + direction);\n  }\n  findPurchasesByOldest(page, size, sort, direction) {\n    return this.http.get(this.url + '/findPurchasesByOldest?page=' + page + '&size=' + size + '&sort=' + sort + ',' + direction);\n  }\n  findPurchasesMostExpensiveByIdUser(user_id, page, size, sort, direction) {\n    return this.http.get(this.url + '/findPurchasesMostExpensiveByIdUser/' + user_id + '?page=' + page + '&size=' + size + '&sort=' + sort + ',' + direction);\n  }\n  findPurchasesMostCheapestByIdUser(user_id, page, size, sort, direction) {\n    return this.http.get(this.url + '/findPurchasesMostCheapestByIdUser/' + user_id + '?page=' + page + '&size=' + size + '&sort=' + sort + ',' + direction);\n  }\n  static #_ = this.ɵfac = function PurchaseAjaxService_Factory(t) {\n    return new (t || PurchaseAjaxService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PurchaseAjaxService,\n    factory: PurchaseAjaxService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["API_URL","PurchaseAjaxService","constructor","http","url","getPurchaseById","id","get","getPurchaseByUsuarioId","user_id","page","size","direction","sort","getPagePurchases","getPurchaseRandom","makeSingleCartPurchase","cart_id","post","makeAllCartPurchase","generatePurchases","amount","deletePurchase","delete","deleteAllPurchases","findPurchasesByNewest","findPurchasesByOldest","findPurchasesMostExpensiveByIdUser","findPurchasesMostCheapestByIdUser","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Lucas\\Desktop\\urbanize-frontend\\src\\app\\service\\purchase.ajax.service.ts"],"sourcesContent":["import { IPurchase, IPurchasePage, Pageable, Sort } from './../model/model.interfaces';\nimport { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { API_URL } from \"src/environment/environment\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PurchaseAjaxService {\n\n  private url = API_URL + '/purchase';\n\n  constructor(private http: HttpClient) {\n  }\n\n  getPurchaseById(id: number): Observable<IPurchase> {\n    return this.http.get<IPurchase>(this.url + '/' + id);\n  }\n\n  getPurchaseByUsuarioId(user_id: number, page: number, size: number, direction: string, sort: string): Observable<IPurchasePage> {\n    return this.http.get<IPurchasePage>(this.url + '/user/' + user_id + '?page=' + page + '&size=' + size + '&sort=' + sort + ',' + direction);\n  }\n\n  getPagePurchases(page: number, size: number, sort: string, direction: string): Observable<IPurchasePage> {\n    return this.http.get<IPurchasePage>(this.url + '?page=' + page + '&size=' + size + '&sort=' + sort + ',' + direction);\n  }\n\n  getPurchaseRandom(): Observable<IPurchase> {\n    return this.http.get<IPurchase>(this.url + '/random');\n  }\n\n  makeSingleCartPurchase(user_id: number, cart_id: number): Observable<IPurchase> {\n    return this.http.post<IPurchase>(this.url + '/makeSingleCartPurchase/' + user_id + '/' + cart_id, {});\n  }\n\n  makeAllCartPurchase(user_id: number): Observable<IPurchase> {\n    return this.http.post<IPurchase>(this.url + '/makeAllCartPurchase/' + user_id, {});\n  }\n\n  generatePurchases(amount: number): Observable<number> {\n    return this.http.post<number>(this.url + '/populate/' + amount, {});\n  }\n\n  deletePurchase(id: number | undefined): Observable<number> {\n    return this.http.delete<number>(this.url + '/' + id);\n  }\n\n  deleteAllPurchases(): Observable<number> {\n    return this.http.delete<number>(this.url + '/empty');\n  }\n\n  findPurchasesByNewest(page: number, size: number, sort: string, direction: string): Observable<IPurchasePage> {\n    return this.http.get<IPurchasePage>(this.url + '/findPurchasesByNewest?page=' + page + '&size=' + size + '&sort=' + sort + ',' + direction);\n  }\n\n  findPurchasesByOldest(page: number, size: number, sort: string, direction: string): Observable<IPurchasePage> {\n    return this.http.get<IPurchasePage>(this.url + '/findPurchasesByOldest?page=' + page + '&size=' + size + '&sort=' + sort + ',' + direction);\n  }\n\n  findPurchasesMostExpensiveByIdUser(user_id: number, page: number, size: number, sort: string, direction: string): Observable<IPurchasePage> {\n    return this.http.get<IPurchasePage>(this.url + '/findPurchasesMostExpensiveByIdUser/' + user_id + '?page=' + page + '&size=' + size + '&sort=' + sort + ',' + direction);\n  }\n\n  findPurchasesMostCheapestByIdUser(user_id: number, page: number, size: number, sort: string, direction: string): Observable<IPurchasePage> {\n    return this.http.get<IPurchasePage>(this.url + '/findPurchasesMostCheapestByIdUser/' + user_id + '?page=' + page + '&size=' + size + '&sort=' + sort + ',' + direction);\n  }\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}