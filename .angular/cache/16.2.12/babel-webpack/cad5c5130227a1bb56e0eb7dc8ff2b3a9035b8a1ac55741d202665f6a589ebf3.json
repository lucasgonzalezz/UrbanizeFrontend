{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/session.ajax.service\";\nexport class AuthInterceptor {\n  constructor(sessionService) {\n    this.sessionService = sessionService;\n  }\n  intercept(req, next) {\n    if (this.sesionService.isSessionActive()) {\n      const token = this.sesionService.getToken();\n      if (token) {\n        const cloned = req.clone({\n          headers: req.headers.set(\"Authorization\", \"Bearer \" + token)\n        });\n        return next.handle(cloned);\n      } else {\n        return next.handle(req);\n      }\n    } else {\n      return next.handle(req);\n    }\n  }\n  static #_ = this.ɵfac = function AuthInterceptor_Factory(t) {\n    return new (t || AuthInterceptor)(i0.ɵɵinject(i1.SessionAjaxService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthInterceptor,\n    factory: AuthInterceptor.ɵfac\n  });\n}","map":{"version":3,"names":["AuthInterceptor","constructor","sessionService","intercept","req","next","sesionService","isSessionActive","token","getToken","cloned","clone","headers","set","handle","_","i0","ɵɵinject","i1","SessionAjaxService","_2","factory","ɵfac"],"sources":["C:\\Users\\Lucas\\Desktop\\urbanize-frontend\\src\\app\\interceptor\\auth.interceptor.ts"],"sourcesContent":["import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { SessionAjaxService } from \"../service/session.ajax.service\";\r\nimport { Observable } from \"rxjs\";\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n    constructor(\r\n        private sessionService: SessionAjaxService,\r\n    ) {\r\n    }\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        if (this.sesionService.isSessionActive()) {\r\n            const token = this.sesionService.getToken();\r\n            if (token) {\r\n                const cloned = req.clone({\r\n                    headers: req.headers.set(\"Authorization\", \"Bearer \" + token)\r\n                });\r\n                return next.handle(cloned);\r\n            }\r\n            else {\r\n                return next.handle(req);\r\n            }\r\n        } else {\r\n            return next.handle(req);\r\n        }\r\n    }\r\n}"],"mappings":";;AAMA,OAAM,MAAOA,eAAe;EAExBC,YACYC,cAAkC;IAAlC,KAAAA,cAAc,GAAdA,cAAc;EAE1B;EAEAC,SAASA,CAACC,GAAqB,EAAEC,IAAiB;IAC9C,IAAI,IAAI,CAACC,aAAa,CAACC,eAAe,EAAE,EAAE;MACtC,MAAMC,KAAK,GAAG,IAAI,CAACF,aAAa,CAACG,QAAQ,EAAE;MAC3C,IAAID,KAAK,EAAE;QACP,MAAME,MAAM,GAAGN,GAAG,CAACO,KAAK,CAAC;UACrBC,OAAO,EAAER,GAAG,CAACQ,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE,SAAS,GAAGL,KAAK;SAC9D,CAAC;QACF,OAAOH,IAAI,CAACS,MAAM,CAACJ,MAAM,CAAC;OAC7B,MACI;QACD,OAAOL,IAAI,CAACS,MAAM,CAACV,GAAG,CAAC;;KAE9B,MAAM;MACH,OAAOC,IAAI,CAACS,MAAM,CAACV,GAAG,CAAC;;EAE/B;EAAC,QAAAW,CAAA,G;qBAtBQf,eAAe,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,kBAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAfpB,eAAe;IAAAqB,OAAA,EAAfrB,eAAe,CAAAsB;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}