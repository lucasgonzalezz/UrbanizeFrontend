{"ast":null,"code":"import { API_URL } from \"src/environment/environment\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class RatingAjaxService {\n  constructor(http) {\n    this.http = http;\n    this.url = API_URL + '/rating';\n  }\n  getRatingById(id) {\n    return this.http.get(this.url + '/' + id);\n  }\n  getRatingRandom() {\n    return this.http.get(this.url + '/random');\n  }\n  createRating(rating) {\n    return this.http.post(this.url, rating);\n  }\n  updateRating(rating) {\n    return this.http.put(this.url, rating);\n  }\n  deleteRating(id) {\n    return this.http.delete(this.url + '/' + id);\n  }\n  getRatingPage(page, size, sort, direction) {\n    return this.http.get(this.url + '?page=' + page + '&size=' + size + '&sort=' + sort + ',' + direction);\n  }\n  generateRatinges(amount) {\n    return this.http.post(this.url + '/populate/' + amount, {});\n  }\n  deleteAllRatinges() {\n    return this.http.delete(this.url);\n  }\n  getRatingPageByProduct(product_id, page, size, sort, direction) {\n    return this.http.get(this.url + '/product/' + product_id + '?page=' + page + '&size=' + size + '&sort=' + sort + ',' + direction);\n  }\n  getRatingPageByUser(user_id, page, size, sort, direction) {\n    return this.http.get(this.url + '/user/' + user_id + '?page=' + page + '&size=' + size + '&sort=' + sort + ',' + direction);\n  }\n  getRatingByUserAndProduct(usuario_id, camiseta_id) {\n    return this.http.get(this.url + '/user/' + usuario_id + '/product/' + camiseta_id);\n  }\n  getAverageRatingByProduct(product_id) {\n    return this.http.get(this.url + '/product/' + product_id + '/average');\n  }\n  // Get ratings sorted by lowest punctuation for a product\n  getRatingesByProductLowestPunctuation(product_id, page, size, sort, direction) {\n    return this.http.get(this.url + '/product/' + product_id + '/lowestPunctuation?page=' + page + '&size=' + size + '&sort=' + sort + ',' + direction);\n  }\n  // Get ratings sorted by highest punctuation for a product\n  getRatingesByProductHighestPunctuation(product_id, page, size, sort, direction) {\n    return this.http.get(this.url + '/product/' + product_id + '/highestPunctuation?page=' + page + '&size=' + size + '&sort=' + sort + ',' + direction);\n  }\n  // Get ratings sorted by oldest for a product\n  getRatingesByProductOldest(product_id, page, size, sort, direction) {\n    return this.http.get(this.url + '/product/' + product_id + '/oldest?page=' + page + '&size=' + size + '&sort=' + sort + ',' + direction);\n  }\n  // Get ratings sorted by newest for a product\n  getRatingesByProductNewest(product_id, page, size, sort, direction) {\n    return this.http.get(this.url + '/product/' + product_id + '/newest?page=' + page + '&size=' + size + '&sort=' + sort + ',' + direction);\n  }\n  // Get ratings sorted by lowest punctuation for a user\n  getRatingesByUserLowestPunctuation(user_id, page, size, sort, direction) {\n    return this.http.get(this.url + '/user/' + user_id + '/lowestPunctuation?page=' + page + '&size=' + size + '&sort=' + sort + ',' + direction);\n  }\n  // Get ratings sorted by highest punctuation for a user\n  getRatingesByUserHighestPunctuation(user_id, page, size, sort, direction) {\n    return this.http.get(this.url + '/user/' + user_id + '/highestPunctuation?page=' + page + '&size=' + size + '&sort=' + sort + ',' + direction);\n  }\n  // Get ratings sorted by oldest for a user\n  getRatingesByUserOldest(user_id, page, size, sort, direction) {\n    return this.http.get(this.url + '/user/' + user_id + '/oldest?page=' + page + '&size=' + size + '&sort=' + sort + ',' + direction);\n  }\n  // Get ratings sorted by newest for a user\n  getRatingesByUserNewest(user_id, page, size, sort, direction) {\n    return this.http.get(this.url + '/user/' + user_id + '/newest?page=' + page + '&size=' + size + '&sort=' + sort + ',' + direction);\n  }\n  static #_ = this.ɵfac = function RatingAjaxService_Factory(t) {\n    return new (t || RatingAjaxService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: RatingAjaxService,\n    factory: RatingAjaxService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["API_URL","RatingAjaxService","constructor","http","url","getRatingById","id","get","getRatingRandom","createRating","rating","post","updateRating","put","deleteRating","delete","getRatingPage","page","size","sort","direction","generateRatinges","amount","deleteAllRatinges","getRatingPageByProduct","product_id","getRatingPageByUser","user_id","getRatingByUserAndProduct","usuario_id","camiseta_id","getAverageRatingByProduct","getRatingesByProductLowestPunctuation","getRatingesByProductHighestPunctuation","getRatingesByProductOldest","getRatingesByProductNewest","getRatingesByUserLowestPunctuation","getRatingesByUserHighestPunctuation","getRatingesByUserOldest","getRatingesByUserNewest","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Lucas\\Desktop\\urbanize-frontend\\src\\app\\service\\rating.ajax.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { API_URL } from \"src/environment/environment\";\nimport { IRating, IRatingPage } from \"../model/model.interfaces\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RatingAjaxService {\n\n  private url = API_URL + '/rating';\n\n  constructor(private http: HttpClient) {\n\n  }\n\n  getRatingById(id: number): Observable<IRating> {\n    return this.http.get<IRating>(this.url + '/' + id);\n  }\n\n  getRatingRandom(): Observable<IRating> {\n    return this.http.get<IRating>(this.url + '/random');\n  }\n\n  createRating(rating: IRating): Observable<IRating> {\n    return this.http.post<IRating>(this.url, rating);\n  }\n\n  updateRating(rating: IRating): Observable<IRating> {\n    return this.http.put<IRating>(this.url, rating);\n  }\n\n  deleteRating(id: number | undefined): Observable<number> {\n    return this.http.delete<number>(this.url + '/' + id);\n  }\n\n  getRatingPage(page: number, size: number, sort: string, direction: string): Observable<IRatingPage> {\n    return this.http.get<IRatingPage>(this.url + '?page=' + page + '&size=' + size + '&sort=' + sort + ',' + direction);\n  }\n\n  generateRatinges(amount: number): Observable<number> {\n    return this.http.post<number>(this.url + '/populate/' + amount, {});\n  }\n\n  deleteAllRatinges(): Observable<number> {\n    return this.http.delete<number>(this.url);\n  }\n\n  getRatingPageByProduct(product_id: number, page: number, size: number, sort: string, direction: string): Observable<IRatingPage> {\n    return this.http.get<IRatingPage>(this.url + '/product/' + product_id + '?page=' + page + '&size=' + size + '&sort=' + sort + ',' + direction);\n  }\n\n  getRatingPageByUser(user_id: number, page: number, size: number, sort: string, direction: string): Observable<IRatingPage> {\n    return this.http.get<IRatingPage>(this.url + '/user/' + user_id + '?page=' + page + '&size=' + size + '&sort=' + sort + ',' + direction);\n  }\n\n  getRatingByUserAndProduct(usuario_id: number, camiseta_id: number): Observable<IRating> {\n    return this.http.get<IRating>(this.url + '/user/' + usuario_id + '/product/' + camiseta_id);\n  }\n\n  getAverageRatingByProduct(product_id: number): Observable<number> {\n    return this.http.get<number>(this.url + '/product/' + product_id + '/average');\n  }\n\n  // Get ratings sorted by lowest punctuation for a product\n  getRatingesByProductLowestPunctuation(product_id: number, page: number, size: number, sort: string, direction: string): Observable<IRatingPage> {\n    return this.http.get<IRatingPage>(this.url + '/product/' + product_id + '/lowestPunctuation?page=' + page + '&size=' + size + '&sort=' + sort + ',' + direction);\n  }\n\n  // Get ratings sorted by highest punctuation for a product\n  getRatingesByProductHighestPunctuation(product_id: number, page: number, size: number, sort: string, direction: string): Observable<IRatingPage> {\n    return this.http.get<IRatingPage>(this.url + '/product/' + product_id + '/highestPunctuation?page=' + page + '&size=' + size + '&sort=' + sort + ',' + direction);\n  }\n\n  // Get ratings sorted by oldest for a product\n  getRatingesByProductOldest(product_id: number, page: number, size: number, sort: string, direction: string): Observable<IRatingPage> {\n    return this.http.get<IRatingPage>(this.url + '/product/' + product_id + '/oldest?page=' + page + '&size=' + size + '&sort=' + sort + ',' + direction);\n  }\n\n  // Get ratings sorted by newest for a product\n  getRatingesByProductNewest(product_id: number, page: number, size: number, sort: string, direction: string): Observable<IRatingPage> {\n    return this.http.get<IRatingPage>(this.url + '/product/' + product_id + '/newest?page=' + page + '&size=' + size + '&sort=' + sort + ',' + direction);\n  }\n\n  // Get ratings sorted by lowest punctuation for a user\n  getRatingesByUserLowestPunctuation(user_id: number, page: number, size: number, sort: string, direction: string): Observable<IRatingPage> {\n    return this.http.get<IRatingPage>(this.url + '/user/' + user_id + '/lowestPunctuation?page=' + page + '&size=' + size + '&sort=' + sort + ',' + direction);\n  }\n\n  // Get ratings sorted by highest punctuation for a user\n  getRatingesByUserHighestPunctuation(user_id: number, page: number, size: number, sort: string, direction: string): Observable<IRatingPage> {\n    return this.http.get<IRatingPage>(this.url + '/user/' + user_id + '/highestPunctuation?page=' + page + '&size=' + size + '&sort=' + sort + ',' + direction);\n  }\n\n  // Get ratings sorted by oldest for a user\n  getRatingesByUserOldest(user_id: number, page: number, size: number, sort: string, direction: string): Observable<IRatingPage> {\n    return this.http.get<IRatingPage>(this.url + '/user/' + user_id + '/oldest?page=' + page + '&size=' + size + '&sort=' + sort + ',' + direction);\n  }\n\n  // Get ratings sorted by newest for a user\n  getRatingesByUserNewest(user_id: number, page: number, size: number, sort: string, direction: string): Observable<IRatingPage> {\n    return this.http.get<IRatingPage>(this.url + '/user/' + user_id + '/newest?page=' + page + '&size=' + size + '&sort=' + sort + ',' + direction);\n  }\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}