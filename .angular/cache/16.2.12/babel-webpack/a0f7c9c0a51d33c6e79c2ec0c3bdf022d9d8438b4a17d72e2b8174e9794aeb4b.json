{"ast":null,"code":"import { API_URL } from \"src/environment/environment\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserAjaxService {\n  constructor(http) {\n    this.http = http;\n    this.url = API_URL + '/user';\n  }\n  getUserById(id) {\n    return this.http.get(this.url + '/' + id);\n  }\n  getUserByUsername(username) {\n    return this.http.get(this.url + '/username/' + username);\n  }\n  getUserRandom() {\n    return this.http.get(this.url + '/random');\n  }\n  createUser(user) {\n    return this.http.post(this.url, user);\n  }\n  updateUser(user) {\n    return this.http.put(this.url, user);\n  }\n  deleteUsuario(id) {\n    return this.http.delete(this.url + '/' + id);\n  }\n  getUserPage(page, size, sort, direction) {\n    return this.http.get(this.url + '?page=' + page + '&size=' + size + '&sort=' + sort + ',' + direction);\n  }\n  generateUsers(amount) {\n    return this.http.post(this.url + '/populate/' + amount, {});\n  }\n  deleteAllUsers() {\n    return this.http.delete(this.url + '/empty');\n  }\n  getUsersWithMostPurchases(page, size) {\n    return this.http.get(this.url + '/mostPurchases?page=' + page + '&size=' + size);\n  }\n  getUsersWithFewestPurchases(page, size) {\n    return this.http.get(this.url + '/fewestPurchases?page=' + page + '&size=' + size);\n  }\n  getUsersWithMostRatings(page, size) {\n    return this.http.get(this.url + '/mostRatings?page=' + page + '&size=' + size);\n  }\n  static #_ = this.ɵfac = function UserAjaxService_Factory(t) {\n    return new (t || UserAjaxService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserAjaxService,\n    factory: UserAjaxService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["API_URL","UserAjaxService","constructor","http","url","getUserById","id","get","getUserByUsername","username","getUserRandom","createUser","user","post","updateUser","put","deleteUsuario","delete","getUserPage","page","size","sort","direction","generateUsers","amount","deleteAllUsers","getUsersWithMostPurchases","getUsersWithFewestPurchases","getUsersWithMostRatings","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Lucas\\Desktop\\urbanize-frontend\\src\\app\\service\\user.ajax.service.ts"],"sourcesContent":["import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { API_URL } from \"src/environment/environment\";\nimport { IUser, IUserPage } from \"../model/model.interfaces\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserAjaxService {\n\n  url: string = API_URL + '/user';\n\n  constructor(private http: HttpClient) {\n  }\n\n  getUserById(id: number): Observable<IUser> {\n    return this.http.get<IUser>(this.url + '/' + id);\n  }\n\n  getUserByUsername(username: string): Observable<IUser> {\n    return this.http.get<IUser>(this.url + '/username/' + username);\n  }\n\n  getUserRandom(): Observable<IUser> {\n    return this.http.get<IUser>(this.url + '/random');\n  }\n\n  createUser(user: IUser): Observable<IUser> {\n    return this.http.post<IUser>(this.url, user);\n  }\n\n  updateUser(user: IUser): Observable<IUser> {\n    return this.http.put<IUser>(this.url, user);\n  }\n\n  deleteUsuario(id: number | undefined): Observable<number> {\n    return this.http.delete<number>(this.url + '/' + id);\n  }\n\n  getUserPage(page: number, size: number, sort: string, direction: string): Observable<IUserPage> {\n    return this.http.get<IUserPage>(this.url + '?page=' + page + '&size=' + size + '&sort=' + sort + ',' + direction);\n  }\n\n  generateUsers(amount: number): Observable<number> {\n    return this.http.post<number>(this.url + '/populate/' + amount, {});\n  }\n\n  deleteAllUsers(): Observable<number> {\n    return this.http.delete<number>(this.url + '/empty');\n  }\n\n  getUsersWithMostPurchases(page: number, size: number): Observable<IUserPage> {\n    return this.http.get<IUserPage>(this.url + '/mostPurchases?page=' + page + '&size=' + size);\n  }\n\n  getUsersWithFewestPurchases(page: number, size: number): Observable<IUserPage> {\n    return this.http.get<IUserPage>(this.url + '/fewestPurchases?page=' + page + '&size=' + size);\n  }\n\n  getUsersWithMostRatings(page: number, size: number): Observable<IUserPage> {\n    return this.http.get<IUserPage>(this.url + '/mostRatings?page=' + page + '&size=' + size);\n  }\n\n}"],"mappings":"AAGA,SAASA,OAAO,QAAQ,6BAA6B;;;AAMrD,OAAM,MAAOC,eAAe;EAI1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFxB,KAAAC,GAAG,GAAWJ,OAAO,GAAG,OAAO;EAG/B;EAEAK,WAAWA,CAACC,EAAU;IACpB,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAQ,IAAI,CAACH,GAAG,GAAG,GAAG,GAAGE,EAAE,CAAC;EAClD;EAEAE,iBAAiBA,CAACC,QAAgB;IAChC,OAAO,IAAI,CAACN,IAAI,CAACI,GAAG,CAAQ,IAAI,CAACH,GAAG,GAAG,YAAY,GAAGK,QAAQ,CAAC;EACjE;EAEAC,aAAaA,CAAA;IACX,OAAO,IAAI,CAACP,IAAI,CAACI,GAAG,CAAQ,IAAI,CAACH,GAAG,GAAG,SAAS,CAAC;EACnD;EAEAO,UAAUA,CAACC,IAAW;IACpB,OAAO,IAAI,CAACT,IAAI,CAACU,IAAI,CAAQ,IAAI,CAACT,GAAG,EAAEQ,IAAI,CAAC;EAC9C;EAEAE,UAAUA,CAACF,IAAW;IACpB,OAAO,IAAI,CAACT,IAAI,CAACY,GAAG,CAAQ,IAAI,CAACX,GAAG,EAAEQ,IAAI,CAAC;EAC7C;EAEAI,aAAaA,CAACV,EAAsB;IAClC,OAAO,IAAI,CAACH,IAAI,CAACc,MAAM,CAAS,IAAI,CAACb,GAAG,GAAG,GAAG,GAAGE,EAAE,CAAC;EACtD;EAEAY,WAAWA,CAACC,IAAY,EAAEC,IAAY,EAAEC,IAAY,EAAEC,SAAiB;IACrE,OAAO,IAAI,CAACnB,IAAI,CAACI,GAAG,CAAY,IAAI,CAACH,GAAG,GAAG,QAAQ,GAAGe,IAAI,GAAG,QAAQ,GAAGC,IAAI,GAAG,QAAQ,GAAGC,IAAI,GAAG,GAAG,GAAGC,SAAS,CAAC;EACnH;EAEAC,aAAaA,CAACC,MAAc;IAC1B,OAAO,IAAI,CAACrB,IAAI,CAACU,IAAI,CAAS,IAAI,CAACT,GAAG,GAAG,YAAY,GAAGoB,MAAM,EAAE,EAAE,CAAC;EACrE;EAEAC,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACtB,IAAI,CAACc,MAAM,CAAS,IAAI,CAACb,GAAG,GAAG,QAAQ,CAAC;EACtD;EAEAsB,yBAAyBA,CAACP,IAAY,EAAEC,IAAY;IAClD,OAAO,IAAI,CAACjB,IAAI,CAACI,GAAG,CAAY,IAAI,CAACH,GAAG,GAAG,sBAAsB,GAAGe,IAAI,GAAG,QAAQ,GAAGC,IAAI,CAAC;EAC7F;EAEAO,2BAA2BA,CAACR,IAAY,EAAEC,IAAY;IACpD,OAAO,IAAI,CAACjB,IAAI,CAACI,GAAG,CAAY,IAAI,CAACH,GAAG,GAAG,wBAAwB,GAAGe,IAAI,GAAG,QAAQ,GAAGC,IAAI,CAAC;EAC/F;EAEAQ,uBAAuBA,CAACT,IAAY,EAAEC,IAAY;IAChD,OAAO,IAAI,CAACjB,IAAI,CAACI,GAAG,CAAY,IAAI,CAACH,GAAG,GAAG,oBAAoB,GAAGe,IAAI,GAAG,QAAQ,GAAGC,IAAI,CAAC;EAC3F;EAAC,QAAAS,CAAA,G;qBArDU5B,eAAe,EAAA6B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAfjC,eAAe;IAAAkC,OAAA,EAAflC,eAAe,CAAAmC,IAAA;IAAAC,UAAA,EAFd;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}