{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nexport let LoginRoutedComponent = class LoginRoutedComponent {\n  constructor(fb, sessionService, router, snackBar, cryptoService) {\n    this.fb = fb;\n    this.sessionService = sessionService;\n    this.router = router;\n    this.snackBar = snackBar;\n    this.cryptoService = cryptoService;\n    this.status = null;\n    this.prelogin = null;\n    this.loginForm = this.fb.group({\n      username: ['', [Validators.required]],\n      contrasenya: ['', [Validators.required]],\n      captcha: ['', [Validators.required]]\n    });\n  }\n  getPreloginData() {\n    this.sessionService.prelogin().subscribe({\n      next: data => {\n        this.prelogin = data;\n      },\n      error: error => {\n        this.status = error;\n        this.snackBar.open('Error al obtener los datos de prelogin', 'Cerrar', {\n          duration: 2000\n        });\n      }\n    });\n  }\n  ngOnInit() {\n    this.getPreloginData();\n  }\n  onSubmit() {\n    if (this.loginForm.valid && this.prelogin) {\n      let username = this.loginForm.get('username')?.value;\n      let contrasenya = this.loginForm.get('contrasenya')?.value;\n      let contrasenyaSHA256 = this.cryptoService.getSHA256(contrasenya);\n      let token = this.prelogin.token;\n      let answer = this.loginForm.get('captcha')?.value;\n      this.sessionService.loginCaptcha(username, contrasenyaSHA256, token, answer).subscribe({\n        next: data => {\n          this.sessionService.setToken(data);\n          this.sessionService.emit({\n            type: 'login'\n          });\n          this.router.navigate(['/home']);\n        },\n        error: error => {\n          this.status = error;\n          this.snackBar.open('Error al iniciar sesión', 'Cerrar', {\n            duration: 2000\n          });\n          this.getPreloginData();\n          this.loginForm.reset();\n        }\n      });\n    }\n  }\n  onReset() {\n    this.loginForm.reset();\n    this.getPreloginData();\n  }\n  loginAdmin() {\n    this.loginForm.setValue({\n      username: 'jaimeseki99',\n      contrasenya: 'noventaveinticuatro9024',\n      captcha: ''\n    });\n  }\n  loginUser() {\n    this.loginForm.setValue({\n      username: 'sekimmortenn',\n      contrasenya: 'noventaveinticuatro9024',\n      captcha: ''\n    });\n  }\n};\nLoginRoutedComponent = __decorate([Component({\n  selector: 'app-login-routed',\n  templateUrl: './login-routed.component.html',\n  styleUrls: ['./login-routed.component.css']\n})], LoginRoutedComponent);","map":{"version":3,"names":["Component","Validators","LoginRoutedComponent","constructor","fb","sessionService","router","snackBar","cryptoService","status","prelogin","loginForm","group","username","required","contrasenya","captcha","getPreloginData","subscribe","next","data","error","open","duration","ngOnInit","onSubmit","valid","get","value","contrasenyaSHA256","getSHA256","token","answer","loginCaptcha","setToken","emit","type","navigate","reset","onReset","loginAdmin","setValue","loginUser","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Lucas\\Desktop\\urbanize-frontend\\src\\app\\components\\shared\\login-routed\\login-routed.component.ts"],"sourcesContent":["import { HttpErrorResponse } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { IPrelogin } from 'src/app/model/model.interfaces';\nimport { CryptoService } from 'src/app/service/crypto.service';\nimport { SessionAjaxService } from 'src/app/service/session.ajax.service';\n\n@Component({\n  selector: 'app-login-routed',\n  templateUrl: './login-routed.component.html',\n  styleUrls: ['./login-routed.component.css']\n})\nexport class LoginRoutedComponent implements OnInit {\n\n  loginForm: FormGroup;\n  status: HttpErrorResponse | null = null;\n  prelogin: IPrelogin | null = null;\n\n  constructor(\n    private fb: FormBuilder,\n    private sessionService: SessionAjaxService,\n    private router: Router,\n    private snackBar: MatSnackBar,\n    private cryptoService: CryptoService\n  ) { \n    this.loginForm = this.fb.group({\n      username: ['', [Validators.required]],\n      contrasenya: ['', [Validators.required]],\n      captcha: ['', [Validators.required]]\n    });\n  }\n\n  getPreloginData() {\n    this.sessionService.prelogin().subscribe({\n      next: (data: IPrelogin) => {\n        this.prelogin = data;\n      },\n      error: (error) => {\n        this.status = error;\n        this.snackBar.open('Error al obtener los datos de prelogin', 'Cerrar', {duration: 2000});\n      }\n    });\n  }\n\n  ngOnInit() {\n    this.getPreloginData();\n  }\n\n  onSubmit() {\n    if (this.loginForm.valid && this.prelogin) {\n      let username = this.loginForm.get('username')?.value;\n      let contrasenya = this.loginForm.get('contrasenya')?.value;\n      let contrasenyaSHA256 = this.cryptoService.getSHA256(contrasenya);\n      let token = this.prelogin.token;\n      let answer = this.loginForm.get('captcha')?.value;\n      this.sessionService.loginCaptcha(username, contrasenyaSHA256, token, answer).subscribe({\n        next: (data: string) => {\n          this.sessionService.setToken(data);\n          this.sessionService.emit({type: 'login'});\n          this.router.navigate(['/home']);\n        }, error: (error: HttpErrorResponse) => {\n          this.status = error;\n          this.snackBar.open('Error al iniciar sesión', 'Cerrar', {duration: 2000});\n          this.getPreloginData();\n          this.loginForm.reset();\n        }\n    });\n  }\n\n}\n\nonReset() {\n  this.loginForm.reset();\n  this.getPreloginData();\n}\n\nloginAdmin() {\n  this.loginForm.setValue({ username: 'jaimeseki99', contrasenya: 'noventaveinticuatro9024', captcha: ''});\n}\n\nloginUser() {\n  this.loginForm.setValue({ username: 'sekimmortenn', contrasenya: 'noventaveinticuatro9024', captcha: ''});\n}\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}